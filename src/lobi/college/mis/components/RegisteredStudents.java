/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lobi.college.mis.components;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import lobi.college.util.Database;

/**
 *
 * @author shady
 */
public class RegisteredStudents extends javax.swing.JPanel {

    private final Color Silver;
    Toolkit toolkit;
    Dimension dimension;

    /**
     * Creates new form RegisteredStudents
     */
    public RegisteredStudents() {
        Silver = new Color(247, 247, 247);
        toolkit = Toolkit.getDefaultToolkit();
        dimension = toolkit.getScreenSize();
        initComponents();
        populateTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cboParam = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane(tblStudents);
        tblStudents = new javax.swing.JTable();

        cboParam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Student Number", "Name", "Department", "Course", " " }));

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lobi/college/mis/resources/research.png"))); // NOI18N
        jButton1.setText("<html><b>Search</b>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane3.setForeground(new java.awt.Color(31, 28, 28));
        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setDoubleBuffered(true);
        jScrollPane3.setWheelScrollingEnabled(false);

        tblStudents.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {

            @Override
            public Component getTableCellRendererComponent(JTable table,
                Object value, boolean isSelected, boolean hasFocus,
                int row, int column) {
                Component c = super.getTableCellRendererComponent(table,
                    value, isSelected, hasFocus, row, column);
                c.setBackground(row%2==0 ? Color.white : Silver);
                return c;
            };
        });
        tblStudents.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10", "Title 11", "Title 12", "Title 13"
            }
        ));
        tblStudents.setDoubleBuffered(true);
        tblStudents.setSelectionForeground(java.awt.SystemColor.activeCaption);
        tblStudents.setPreferredScrollableViewportSize(new Dimension(dimension.width,dimension.height));
        jScrollPane3.setViewportView(tblStudents);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(cboParam, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboParam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        // TODO add your handling code here:
       populateTable(txtSearch.getText());
    }//GEN-LAST:event_txtSearchKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboParam;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblStudents;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {

        try {

            // create a sql date object so we can use it in our INSERT statement
            File f = new File("server.properties");
            Connection cnn = Database.getConnection();

            PreparedStatement ps = cnn.prepareStatement("Select * from Students");
            ResultSet rs = ps.executeQuery();
            DefaultTableModel tm = (DefaultTableModel) tblStudents.getModel();
            tm.setRowCount(0);

            while (rs.next()) {

                Object o[] = {rs.getString("StudentID"), rs.getInt("B_Certificate"), rs.getString("Student_Name"), rs.getInt("IDNo"), rs.getString("Gender"), rs.getString("Nationality"), rs.getString("County"), rs.getString("Subcounty"), rs.getString("Phone"), rs.getString("email"), rs.getString("Address"), rs.getString("Gender"), rs.getString("NextOfKin"), rs.getString("NextofKinPhone")};
                tm.addRow(o);

            }

            tblStudents.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
        } catch (SQLException e) {

            JOptionPane.showMessageDialog(null, "Error " + e.getMessage());
        }
    }

    private void populateTable(String key) {
        String dbParam = "", seachParam = cboParam.getSelectedItem().toString();

        switch (seachParam) {
            case "Student Number":
                dbParam = "StudentID" ;
                
                break;
            case "Name":
                dbParam = "Student_Name";
                break;
            case "Department":
                populateTable();
                return;
                //dbParam = "";
            case "Course":
                populateTable();
                return;
              //  dbParam = "";
            default:
                populateTable();
                return;
        }

        try {

            // create a sql date object so we can use it in our INSERT statement
            Connection cnn = Database.getConnection();
              PreparedStatement ps=cnn.prepareStatement("SELECT * FROM Students WHERE StudentID like '%"+key+"%' OR Student_Name like '%"+key+"%' OR B_Certificate like '%"+key+"%' OR IDNo like '%"+key+"%' OR Gender like '%"+key+"%' OR Nationality like '%"+key+"%' OR County like '%"+key+"%' OR Subcounty like '%"+key+"%' OR Division like '%"+key+"%' OR Location like '%"+key+"%' OR SubLocation like '%"+key+"%' OR Village like '%"+key+"%' OR Address like '%"+key+"%' OR Phone like '%"+key+"%' OR email like '%"+key+"%' OR NextOfKin like '%"+key+"%' OR NextofKinPhone like '%"+key+"%' OR NextofKinEmail");
            //PreparedStatement ps = cnn.prepareStatement("Select * from Students where "+dbParam+" like '%"+key+"%'");
            ResultSet rs = ps.executeQuery();
            DefaultTableModel tm = (DefaultTableModel) tblStudents.getModel();
            tm.setRowCount(0);

            while (rs.next()) {

                Object o[] = {rs.getString("StudentID"), rs.getInt("B_Certificate"), rs.getString("Student_Name"), rs.getInt("IDNo"), rs.getString("Gender"), rs.getString("Nationality"), rs.getString("County"), rs.getString("Subcounty"), rs.getString("Phone"), rs.getString("email"), rs.getString("Address"), rs.getString("Gender"), rs.getString("NextOfKin"), rs.getString("NextofKinPhone")};
                tm.addRow(o);

            }

            tblStudents.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
        } catch (SQLException e) {

            JOptionPane.showMessageDialog(null, "Error " + e.getMessage());
        }
    }
}
