/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lobi.college.mis.components;

import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import static javax.swing.SwingUtilities.isRightMouseButton;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import lobi.college.util.Database;
import lobi.college.util.StudentInfo;
import lobi.college.util.Util;

/**
 *
 * @author shady
 */
public class ClassManager extends javax.swing.JPanel {

    private String User;
    private String Dept;

    /**
     * Creates new form ClassManager
     */
    public ClassManager(String user, String dept) {
        this.User = user;
        this.Dept = dept;
        initComponents();
        populateTable();
   // populateLevelTree();
        populateStudentTable();   
        cboLevel.setSelectedIndex(1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jXDatePicker2 = new org.jdesktop.swingx.JXDatePicker();
        jXDatePicker3 = new org.jdesktop.swingx.JXDatePicker();
        jPanel6 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cboCourses = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        optJan = new javax.swing.JRadioButton();
        optMay = new javax.swing.JRadioButton();
        optSep = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        txtCohortID = new javax.swing.JTextField();
        cboLevel = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jSpinner3 = new javax.swing.JSpinner();
        cboStructure = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        txtCourseFormat = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        optRegular = new javax.swing.JRadioButton();
        optParallel = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCohorts = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblStudents = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Class and Term Details"));

        jLabel1.setText("Select Class");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Term Start Date");

        jLabel3.setText("Term End Date");

        jButton1.setText("Generate Register");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jXDatePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 367, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jXDatePicker3, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jXDatePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXDatePicker3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(774, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Registers", new javax.swing.ImageIcon(getClass().getResource("/lobi/college/mis/resources/gfx/interface.png")), jPanel3); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 973, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 907, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Nominal  Roll", new javax.swing.ImageIcon(getClass().getResource("/lobi/college/mis/resources/gfx/archive.png")), jPanel6); // NOI18N

        jPanel5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanel5FocusGained(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Create a new Class"));

        jLabel4.setText("Course");

        cboCourses.setEnabled(false);
        cboCourses.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboCoursesItemStateChanged(evt);
            }
        });
        cboCourses.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cboCoursesFocusLost(evt);
            }
        });
        cboCourses.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cboCoursesMouseExited(evt);
            }
        });
        cboCourses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboCoursesActionPerformed(evt);
            }
        });

        jLabel5.setText(" Intake");

        buttonGroup1.add(optJan);
        optJan.setSelected(true);
        optJan.setText("January");
        optJan.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        optJan.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                optJanItemStateChanged(evt);
            }
        });
        optJan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                optJanFocusLost(evt);
            }
        });
        optJan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                optJanMouseClicked(evt);
            }
        });

        buttonGroup1.add(optMay);
        optMay.setText("May");
        optMay.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        optMay.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                optMayItemStateChanged(evt);
            }
        });
        optMay.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                optMayFocusLost(evt);
            }
        });
        optMay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                optMayMouseClicked(evt);
            }
        });
        optMay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optMayActionPerformed(evt);
            }
        });

        buttonGroup1.add(optSep);
        optSep.setText("September");
        optSep.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        optSep.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                optSepItemStateChanged(evt);
            }
        });
        optSep.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                optSepFocusLost(evt);
            }
        });
        optSep.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                optSepMouseClicked(evt);
            }
        });
        optSep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optSepActionPerformed(evt);
            }
        });

        jLabel6.setText("Class Name");

        jButton2.setText("Create");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        txtCohortID.setEditable(false);
        txtCohortID.setDisabledTextColor(new java.awt.Color(245, 242, 238));
        txtCohortID.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtCohortIDPropertyChange(evt);
            }
        });

        cboLevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Short Course", "Artisan", "Craft", "Diploma", "Higher Diploma" }));
        cboLevel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboLevelItemStateChanged(evt);
            }
        });

        jLabel8.setText("Start Date");

        jLabel9.setText("Class Capacity");

        jSpinner3.setModel(new javax.swing.SpinnerNumberModel(30, 5, 60, 1));

        cboStructure.setToolTipText("<html>This shows the structure of the selected program\n<ol type=\"1\">\n<li>Number Denotes the number of Terms in the selected Course. Range from 1 to 3. </li>\n<li>NE Denotes National Exam or External Exam by KNEC, NITA or TVET-CDACC </li>\n<li>IE Denotes Internal Exam. </li>\n<li>SE Denotes Stage Exam</li>\n<li>A Denotes Attachment.</li>\n</ol> ");

        jLabel10.setText("Structure");

        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
        jXDatePicker1.setFormats(dateFormat);
        jXDatePicker1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXDatePicker1ActionPerformed(evt);
            }
        });

        txtCourseFormat.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N

        jLabel7.setText("Course Format");

        buttonGroup2.add(optRegular);
        optRegular.setSelected(true);
        optRegular.setText("Regular Class");

        buttonGroup2.add(optParallel);
        optParallel.setText("Parallel Class");

        tblCohorts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Cohort", "Level", "Course", "Enrolled", "Capacity", "Effective Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblCohorts);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(cboLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(cboCourses, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(optRegular)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(optParallel, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(optJan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(optMay)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(optSep)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCourseFormat))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCohortID, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinner3, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboStructure, 0, 254, Short.MAX_VALUE))))
            .addComponent(jScrollPane2)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cboCourses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(optRegular)
                    .addComponent(optParallel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(optJan)
                    .addComponent(optMay)
                    .addComponent(optSep)
                    .addComponent(cboStructure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtCourseFormat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCohortID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)
                        .addComponent(jLabel8)
                        .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9))
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 746, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Create Class", jPanel2);

        jPanel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Advance Class tool"));
        jPanel11.setToolTipText("");

        jButton4.setText("Advance Active Classes");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jButton4)
                .addGap(0, 9, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jButton4)
                .addGap(0, 818, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 784, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Class Tools", jPanel4);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        jTabbedPane1.addTab("Classes", new javax.swing.ImageIcon(getClass().getResource("/lobi/college/mis/resources/gfx/people.png")), jPanel5); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 872, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 333, Short.MAX_VALUE))
        );

        tblStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Student Number", "Student ", "ID Number ", "Level", "Course", "Year", "Phone"
            }
        ));
        tblStudents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStudentsMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblStudents);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lobi/college/mis/resources/gfx/research.png"))); // NOI18N
        jButton3.setText("Search");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(614, 849, Short.MAX_VALUE))
            .addComponent(jScrollPane3)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Students", new javax.swing.ImageIcon(getClass().getResource("/lobi/college/mis/resources/gfx/details1.png")), jPanel7); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 437, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
        populateStudentTable(jTextField1.getText());
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:
        populateStudentTable(jTextField1.getText());
    }//GEN-LAST:event_jTextField1KeyReleased

    private void tblStudentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStudentsMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblStudents.getModel();
        String x = model.getValueAt(tblStudents.getSelectedRow(), 0).toString();
        // JOptionPane.showMessageDialog(this, x);
        try {
            StudentInfo studentInfo = new StudentInfo(x);
            studentInfo.setLocationRelativeTo(this);
            studentInfo.setVisible(true);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tblStudentsMouseClicked

    private void jPanel5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel5FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel5FocusGained

    private void jXDatePicker1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePicker1ActionPerformed
        // TODO add your handling code here:
        //JOptionPane.showMessageDialog(jXDatePicker1, jXDatePicker1.getEditor().getText());
    }//GEN-LAST:event_jXDatePicker1ActionPerformed

    private void cboLevelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboLevelItemStateChanged
        // TODO add your handling code here:
        populateCourses();
        cboCourses.setEnabled(true);
    }//GEN-LAST:event_cboLevelItemStateChanged

    private void txtCohortIDPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtCohortIDPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCohortIDPropertyChange

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        createCohort();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void optSepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optSepActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_optSepActionPerformed

    private void optSepMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_optSepMouseClicked
        // TODO add your handling code here:
        generateClassID();
    }//GEN-LAST:event_optSepMouseClicked

    private void optSepFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_optSepFocusLost
        // TODO add your handling code here:
        //generateClassID();
    }//GEN-LAST:event_optSepFocusLost

    private void optSepItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_optSepItemStateChanged

    }//GEN-LAST:event_optSepItemStateChanged

    private void optMayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optMayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_optMayActionPerformed

    private void optMayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_optMayMouseClicked
        // TODO add your handling code here:
        generateClassID();
    }//GEN-LAST:event_optMayMouseClicked

    private void optMayFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_optMayFocusLost
        // TODO add your handling code here:
        // generateClassID();
    }//GEN-LAST:event_optMayFocusLost

    private void optMayItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_optMayItemStateChanged

    }//GEN-LAST:event_optMayItemStateChanged

    private void optJanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_optJanMouseClicked
        // TODO add your handling code here:
        generateClassID();
    }//GEN-LAST:event_optJanMouseClicked

    private void optJanFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_optJanFocusLost
        // TODO add your handling code here:
        // generateClassID();
    }//GEN-LAST:event_optJanFocusLost

    private void optJanItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_optJanItemStateChanged

    }//GEN-LAST:event_optJanItemStateChanged

    private void cboCoursesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboCoursesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboCoursesActionPerformed

    private void cboCoursesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboCoursesMouseExited
        // TODO add your handling code here:
        //generateClassID();
    }//GEN-LAST:event_cboCoursesMouseExited

    private void cboCoursesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cboCoursesFocusLost
        // TODO add your handling code here:
        //generateClassID();
        optJan.setSelected(true);
    }//GEN-LAST:event_cboCoursesFocusLost

    private void cboCoursesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboCoursesItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cboCoursesItemStateChanged

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton4ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cboCourses;
    private javax.swing.JComboBox<String> cboLevel;
    private javax.swing.JComboBox<String> cboStructure;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextField jTextField1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker2;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker3;
    private javax.swing.JRadioButton optJan;
    private javax.swing.JRadioButton optMay;
    private javax.swing.JRadioButton optParallel;
    private javax.swing.JRadioButton optRegular;
    private javax.swing.JRadioButton optSep;
    private javax.swing.JTable tblCohorts;
    private javax.swing.JTable tblStudents;
    private javax.swing.JTextField txtCohortID;
    private javax.swing.JTextField txtCourseFormat;
    // End of variables declaration//GEN-END:variables
private void generateClassID() {

        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
        Date CurrentDate = new Date();

        String slug, month, yearPart, tempString;
        slug = getSlug();
        if (optRegular.isSelected()) {
            if (optJan.isSelected()) {
                month = "J";

            } else if (optMay.isSelected()) {
                month = "M";
            } else if (optSep.isSelected()) {
                month = "S";
            } else {
                // JOptionPane.showMessageDialog(jRadioButton1, "Please select the intake period,", "Information Missing", JOptionPane.ERROR_MESSAGE);
                month = "J";
                optJan.setSelected(true);
                // return;
            }
        } else {
            if (optJan.isSelected()) {
                month = "JP";

            } else if (optMay.isSelected()) {
                month = "MP";
            } else if (optSep.isSelected()) {
                month = "SP";
            } else {
                // JOptionPane.showMessageDialog(jRadioButton1, "Please select the intake period,", "Information Missing", JOptionPane.ERROR_MESSAGE);
                month = "J";
                optJan.setSelected(true);
                // return;
            }
        }
        yearPart = String.valueOf(dateFormat.format(CurrentDate).charAt(2)) + String.valueOf(dateFormat.format(CurrentDate).charAt(3));
        tempString = slug.toUpperCase() + yearPart + month;
        // create a sql date object so we can use it in our INSERT statement
        txtCohortID.setText("");
        txtCohortID.setText(tempString.toUpperCase());

        Util util = new Util();
        // System.out.println(util.getCourseID(cboCourses.getSelectedItem().toString(), cboLevel.getSelectedItem().toString()));
        txtCourseFormat.removeAll();
        txtCourseFormat.setText(generateClassFormat(util.getCourseID(cboCourses.getSelectedItem().toString(), cboLevel.getSelectedItem().toString())));
        String str = txtCourseFormat.getText() + ":" + cboLevel.getSelectedItem();
        cboStructure.removeAllItems();
        if (optRegular.isSelected()) {
            switch (str.toUpperCase()) {
                case "MODULAR:SHORT COURSE": {
                    cboStructure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1+IE"}));
                    break;
                }
                case "MODULAR:ARTISAN": {
                    cboStructure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"2+A+NE", "3+NE+A"}));
                    break;
                }
                case "MODULAR:CRAFT": {
                    cboStructure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"3+NE+A+2+NE", "3+NE+2+NE+A"}));

                    break;
                }
                case "MODULAR:DIPLOMA": {
                    cboStructure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"3+NE+3+NE+A+2+NE", "3+NE+3+NE+2+NE+A"}));

                    break;
                }
                case "MODULAR:HIGHER DIPLOMA": {
                    cboStructure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"3+NE+P"}));

                    break;
                }
                case "STAGE:SHORT COURSE": {
                    cboStructure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1+IE"}));
                    break;
                }
                case "STAGE:CRAFT": {
                    cboStructure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"3+SE+A+2+NE", "3+SE+2+NE+A"}));

                    break;
                }
                case "STAGE:DIPLOMA": {
                    cboStructure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"3+SE+2+SE+2+NE+A", "3+SE+2+SE+A+2+NE"}));

                    break;
                }
                case "STAGE:HIGHER DIPLOMA": {
                    cboStructure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"3+NE+P"}));

                    break;
                }
            }
        } else {
            switch (str.toUpperCase()) {
                case "MODULAR:SHORT COURSE": {
                    cboStructure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1+IE"}));
                    break;
                }
                case "MODULAR:ARTISAN": {
                    cboStructure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"2+A+NE","3+A+NE"}));
                    break;
                }
                case "MODULAR:CRAFT": {
                    cboStructure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"2+NE+A+2+NE","3+NE+A+2+NE", "3+NE+2+NE+A"}));

                    break;
                }
                case "MODULAR:DIPLOMA": {
                    cboStructure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"2+NE+A+2+NE","3+NE+3+NE+A+2+NE","3+NE+2+NE+A+2+NE"}));

                    break;
                }
                case "MODULAR:HIGHER DIPLOMA": {
                    cboStructure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"2+P+NE"}));

                    break;
                }
                case "STAGE:SHORT COURSE": {
                    cboStructure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1+IE"}));
                    break;
                }
                case "STAGE:CRAFT": {
                    cboStructure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"2+SE+A+2+NE", "2+SE+2+NE+A"}));

                    break;
                }
                case "STAGE:DIPLOMA": {
                    cboStructure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"2+SE+A+2+NE", "3+SE+A+2+NE"}));

                    break;
                }
                case "STAGE:HIGHER DIPLOMA": {
                    cboStructure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"2+P+NE"}));

                    break;
                }
            }
        }

    }

    private void populateCourses() {
        try {

            // create a sql date object so we can use it in our INSERT statement
            Connection conn = Database.getConnection();
            Statement st = conn.createStatement();
            cboCourses.removeAllItems();
            try (ResultSet rs = st.executeQuery("select coursename from Courses where level='" + cboLevel.getSelectedItem() + "' and DeptID=" + Dept + "")) {
                while (rs.next()) {
                    cboCourses.addItem(rs.getString("courseName"));

                }
            }

        } catch (SQLException e) {

            JOptionPane.showMessageDialog(this, "When Populating Departments," + e.getMessage(), "Error Occured", JOptionPane.ERROR_MESSAGE);

        }

    }

    private String getSlug() {
        String slug = null;
        Connection cnn = Database.getConnection();
        Statement stmt = null;

        try {
            stmt = cnn.createStatement();
            try (ResultSet rs = stmt.executeQuery("select slug from Courses where level='" + cboLevel.getSelectedItem() + "' and  CourseName='" + cboCourses.getSelectedItem() + "'")) {
                rs.next();
                slug = rs.getString(1);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "When selecting abbreveation, The system encountered the following, \n" + e.getMessage(), "Error Occured", JOptionPane.ERROR_MESSAGE);
            System.out.println(e.getMessage());
        }

        return slug;
    }

    private void createCohort() {
        if ((optJan.isSelected() || optMay.isSelected() || optSep.isSelected()) && (optRegular.isSelected() || optParallel.isSelected())) {
            String Nature;
            Nature = optJan.isSelected() ? "REGULAR" : "PARALLEL";
            try {
                // create a mysql database connection

                // create a sql date object so we can use it in our INSERT statement
                Connection cnn = Database.getConnection();
                // create a sql date object so we can use it in our INSERT statement
                String Query = "insert into Cohorts (CohortName,Level,Course,Capacity,StartDate,Structure,Progress,nature,locked,deptId) values (?,?,?,?,?,?,?,?,?,?)";

// create the mysql insert preparedstatement
                PreparedStatement preparedStmt = cnn.prepareStatement(Query);
                preparedStmt.setString(1, txtCohortID.getText());
                preparedStmt.setString(2, cboLevel.getSelectedItem().toString());
                preparedStmt.setString(3, cboCourses.getSelectedItem().toString());
                preparedStmt.setInt(4, (int) jSpinner3.getValue());
                preparedStmt.setString(5, jXDatePicker1.getEditor().getText());
                preparedStmt.setString(6, cboStructure.getSelectedItem().toString());
                preparedStmt.setString(7, cboStructure.getSelectedItem().toString());
                preparedStmt.setString(8, Nature);
                preparedStmt.setInt(9, 0);
                preparedStmt.setString(10, Dept);

                // execute the preparedstatement
                if (checkExists() == false) {
                    preparedStmt.execute();
                    JOptionPane.showMessageDialog(this, "Cohourt has been created successfuly", "Entry Successful", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "The cohourt " + txtCohortID.getText() + " already Exists", "Cohort Exists", JOptionPane.ERROR_MESSAGE);
                    txtCohortID.grabFocus();
                    return;
                }
                preparedStmt.close();
            } catch (NullPointerException | SQLException ex) {

                System.err.println(ex.getMessage());
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error Occured", JOptionPane.ERROR_MESSAGE);
            }
            populateTable();
//            populateLevelTree();
        } else {
            optJan.grabFocus();
        }
// `CohortName`, `Level`, `Course`, `Capacity`, `StartDate`, `Structure`, `Progress`
    }

    private void populateTable() {
        Util util = new Util();
        try {

            // create a sql date object so we can use it in our INSERT statement
            Connection cnn = Database.getConnection();

            PreparedStatement ps = cnn.prepareStatement("Select * from Cohorts where deptId=" + Dept + " order by No DESC ");
            ResultSet rs = ps.executeQuery();
            DefaultTableModel tm = (DefaultTableModel) tblCohorts.getModel();
            tm.setRowCount(0);

            while (rs.next()) {
                int x = util.getCohortEnrollment(rs.getString("CohortName"));
                Object o[] = {rs.getString("CohortName").toUpperCase(), rs.getString("Level").toUpperCase(), rs.getString("Course").toUpperCase(), x, rs.getInt("Capacity"), rs.getString("StartDate")};
                tm.addRow(o);

            }
            rs.close();

            tblCohorts.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
        } catch (SQLException e) {

            JOptionPane.showMessageDialog(null, "Error " + e.getMessage());
        }
    }

    private boolean checkExists() {
        boolean Exists = false;
        try {
            String Query;
            Statement st;
            ResultSet rs;

            Connection cnn = Database.getConnection();
            st = cnn.createStatement();
            Query = "select *  from Cohorts where CohortName='" + txtCohortID.getText() + "'";

            rs = st.executeQuery(Query);

            if (rs.first()) {

                Exists = true;
            }
            rs.close();
        } catch (SQLException ex) {
            Logger.getLogger(newStudent.class.getName()).log(Level.SEVERE, null, ex);
        }
        return Exists;
    }

    private String generateClassFormat(int courseID) {
        String courseLevel = "";
        try {
            Connection cnn = Database.getConnection();
            Statement st = cnn.createStatement();
            String Query = "select CourseFormat from Courses where CourseID='" + courseID + "'";
            //System.out.println(Query);
            ResultSet rs = st.executeQuery(Query);
            rs.next();
            courseLevel = rs.getString(1);
            rs.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Issue on Getting Course ID ," + e.getMessage(), "Error Occured", JOptionPane.ERROR_MESSAGE);
        }
        return courseLevel;
    }

    private void populateStudentTable() {

        try {

            // create a sql date object so we can use it in our INSERT statement
            File f = new File("server.properties");
            Connection cnn = Database.getConnection();
            String Query = "select STU.StudentID,Student_Name,IDNo,CRS.Level,CourseName,CurrentProgress,Phone from Students STU inner join CourseEnrollment CRSE ON STU.StudentID = CRSE.StudentID inner Join Courses CRS ON CRSE.CourseID = CRS.CourseID Where CRS.DeptID='" + Dept + "' ";
            // System.out.println(Query);
            PreparedStatement ps = cnn.prepareStatement(Query);
            ResultSet rs = ps.executeQuery();
            DefaultTableModel tm = (DefaultTableModel) tblStudents.getModel();
            tm.setRowCount(0);

            while (rs.next()) {

                Object o[] = {rs.getString("STU.StudentID"), rs.getString("Student_Name"), rs.getInt("IDNo"), rs.getString("CRS.Level"), rs.getString("CourseName"), rs.getString("CurrentProgress"), rs.getString("Phone")};
                tm.addRow(o);

            }
            rs.close();

            tblStudents.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
        } catch (SQLException e) {

            JOptionPane.showMessageDialog(null, e.getMessage(), "Error ", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void populateStudentTable(String key) {

        try {

            // create a sql date object so we can use it in our INSERT statement
            Connection cnn = Database.getConnection();
            String Query = "select STU.StudentID,Student_Name,IDNo,CRS.Level,CourseName,CurrentProgress,Phone from Students STU inner join CourseEnrollment CRSE ON STU.StudentID = CRSE.StudentID inner Join Courses CRS ON CRSE.CourseID = CRS.CourseID Where CRS.DeptID='" + Dept + "' AND (STU.StudentID  LIKE '%" + key + "%' or Student_Name   LIKE '%" + key + "%' or IDNo   LIKE '%" + key + "%' or CRS.Level   LIKE '%" + key + "%' or CourseName LIKE '%" + key + "%' or CurrentProgress   LIKE '%" + key + "%' or Phone  LIKE '%" + key + "%')";
            //System.out.println(Query);
            PreparedStatement ps = cnn.prepareStatement(Query);
            //PreparedStatement ps = cnn.prepareStatement("Select * from Students where "+dbParam+" like '%"+key+"%'");
            ResultSet rs = ps.executeQuery();
            DefaultTableModel tm = (DefaultTableModel) tblStudents.getModel();
            tm.setRowCount(0);

            while (rs.next()) {

                Object o[] = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7)};
                tm.addRow(o);

            }
            rs.close();
            tblStudents.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
        } catch (SQLException e) {

            JOptionPane.showMessageDialog(null, e.getMessage(), "Error ", JOptionPane.ERROR);
        }
    }

//    public void populateLevelTree() {
//
//        try {
//            Connection cnn = Database.getConnection();
//            Statement stmt = cnn.createStatement();
//
//            try {
//
//            } catch (Exception ex) {
//                System.out.println(ex.getMessage());
//            }
//            ArrayList list = new ArrayList();
//            list.add("Programmes");
//            String Query = "SELECT * from cohorts";
//
//            ResultSet rs = stmt.executeQuery(Query);
//
//            while (rs.next()) {
//                Object value[] = {rs.getString(1), rs.getString(2)};
//                list.add(value);
//            }
//            Object hierarchy[] = list.toArray();
//            DefaultMutableTreeNode root = processHierarchy(hierarchy);
//
//            DefaultTreeModel treeModel = new DefaultTreeModel(root);
//            treLevels.setModel(treeModel);
//        } catch (SQLException ex) {
//            System.out.println(ex.getMessage());
//        }
//    }
//@SuppressWarnings("CallToThreadDumpStack")
//    public DefaultMutableTreeNode processHierarchy(Object[] hierarchy) {
//        DefaultMutableTreeNode node = new DefaultMutableTreeNode(hierarchy[0]);
//        try {
//            Connection cnn = Database.getConnection();
//            Statement stmt = cnn.createStatement();
//
//            int trow = 0;
//            int i = 0;
//            
//
//                String Query = "SELECT distinct level from cohorts where DeptId=" + Dept + "";
//                ResultSet rs = stmt.executeQuery(Query);
//
//                while (rs.next()) {
//                    trow = rs.getRow();
//                }
//                rs.close();
//                String L1Nam[] = new String[trow];
//                ResultSet rs1 = stmt.executeQuery(Query);
//                while (rs1.next()) {
//                    L1Nam[i] = rs1.getString("level");
//                    i++;
//                }
//                rs1.close();
//                DefaultMutableTreeNode child, grandchild;
//                for (int childIndex = 0; childIndex < L1Nam.length; childIndex++) {
//                    child = new DefaultMutableTreeNode(L1Nam[childIndex]);
//                    node.add(child);//add each created child to root
//                    String subQuery = "SELECT CohortName from Cohorts where level ='" + L1Nam[childIndex] + "' and deptId=" + Dept + " ORDER BY `CohortName` DESC, `StartDate` ASC";
//                    ResultSet rs2 = stmt.executeQuery(subQuery);
//                    while (rs2.next()) {
//                        grandchild = new DefaultMutableTreeNode(rs2.getString("CohortName"));
//                        child.add(grandchild);//add each grandchild to each child
//                    }
//                    rs2.close();
//                }
//            cnn.close();
//            } catch (SQLException ex) {
//            System.out.println(ex.getMessage());
//
//        }
//
//        return (node);
//    }

}
